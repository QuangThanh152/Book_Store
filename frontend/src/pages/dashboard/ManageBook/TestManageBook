import React from 'react';
import { Link, useNavigate } from 'react-router-dom';
import { useDeleteBookMutation, useFetchAllBooksQuery } from '../../../redux/features/books/booksApi';
import { getImgUrl } from '../../../utils/getImgUrl';
import { Pencil, Trash2 } from 'lucide-react';

const ManageBook = () => {
    const navigate = useNavigate();
    const { data: response, refetch } = useFetchAllBooksQuery();
    const books = response?.books || [];
    const [deleteBook] = useDeleteBookMutation();

    const handleDeleteBook = async (id) => {
        if (window.confirm('Bạn có chắc chắn muốn xóa cuốn sách này?')) {
            try {
                await deleteBook(id).unwrap();
                alert('Xóa sách thành công');
                refetch();
            } catch (error) {
                console.log(error);
                alert('Xóa sách thất bại');
            }
        }
    };

    if (!books) {
        return <div className="flex items-center justify-center h-screen">Đang tải...</div>;
    }

    return (
        <div className="container px-4 mx-auto sm:px-8">
            <div className="py-8">
                <div className="flex items-center justify-between mb-4">
                    <h2 className="text-2xl font-semibold leading-tight text-gray-800">Quản lý sách</h2>
                </div>
                <div className="px-4 py-4 -mx-4 overflow-x-auto sm:-mx-8 sm:px-8">
                    <div className="inline-block min-w-full overflow-hidden rounded-lg shadow">
                        <table className="min-w-full leading-normal">
                            <thead>
                                <tr>
                                    <th className="px-5 py-3 text-xs font-semibold tracking-wider text-left text-gray-600 uppercase bg-gray-100 border-b-2 border-gray-200">
                                        Sách
                                    </th>
                                    <th className="px-5 py-3 text-xs font-semibold tracking-wider text-left text-gray-600 uppercase bg-gray-100 border-b-2 border-gray-200">
                                        Thể loại
                                    </th>
                                    <th className="px-5 py-3 text-xs font-semibold tracking-wider text-left text-gray-600 uppercase bg-gray-100 border-b-2 border-gray-200">
                                        Giá
                                    </th>
                                    <th className="px-5 py-3 text-xs font-semibold tracking-wider text-left text-gray-600 uppercase bg-gray-100 border-b-2 border-gray-200">
                                        Hành động
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                {books.map((book, index) => (
                                    <tr key={index} className="hover:bg-gray-50">
                                        <td className="px-5 py-5 text-sm bg-white border-b border-gray-200">
                                            <div className="flex items-center">
                                                <div className="flex-shrink-0 w-16 h-20">
                                                    <img className="object-cover w-full h-full rounded-sm"
                                                        src={getImgUrl(book.coverImage) || "/placeholder.svg"}
                                                        alt={book.title}
                                                        onError={(e) => {
                                                            e.target.onerror = null;
                                                            e.target.src = getImgUrl('placeholder.png');
                                                        }}
                                                    />
                                                </div>
                                                <div className="ml-3">
                                                    <p className="font-medium text-gray-900 whitespace-no-wrap">
                                                        {book.title}
                                                    </p>
                                                </div>
                                            </div>
                                        </td>
                                        <td className="px-5 py-5 text-sm bg-white border-b border-gray-200">
                                            <p className="text-gray-900 whitespace-no-wrap">{book.category}</p>
                                        </td>
                                        <td className="px-5 py-5 text-sm bg-white border-b border-gray-200">
                                            <p className="text-gray-900 whitespace-no-wrap">${book.newPrice}</p>
                                        </td>
                                        <td className="px-5 py-5 text-sm bg-white border-b border-gray-200">
                                            <div className="flex items-center space-x-4">
                                                <Link to={`/dashboard/edit-book/${book._id}`} className="text-blue-600 transition duration-150 ease-in-out hover:text-blue-900">
                                                    <Pencil size={18} />
                                                </Link>
                                                <button onClick={() => handleDeleteBook(book._id)} className="text-red-600 transition duration-150 ease-in-out hover:text-red-900">
                                                    <Trash2 size={18} />
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                ))}
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    );
};

export default ManageBook;






//  Phiên bản 2
import { useState, useMemo, useEffect } from "react";
import { Link } from "react-router-dom";
import {
    useDeleteBookMutation,
    useFetchAllBooksQuery,
} from "../../../redux/features/books/booksApi";
import { getImgUrl } from "../../../utils/getImgUrl";
import { Pencil, Trash2, Search } from "lucide-react";

const ManageBook = () => {

    const { data: response, refetch } = useFetchAllBooksQuery(); // Dùng hook useFetchAllBooksQuery để lấy danh sách sách từ API
    const books = response?.books || [];
    const [deleteBook] = useDeleteBookMutation();

    // Lưu trữ thông tin tìm kiếm, lọc
    const [searchTerm, setSearchTerm] = useState("");
    const [categoryFilter, setCategoryFilter] = useState("all");
    const [priceFilter, setPriceFilter] = useState("all");

    // Tự động gọi API khi trang được mở
    useEffect(() => {
        refetch(); // Cập nhật danh sách khi trang ManageBook được mở lại
    }, []);

    // Hàm xử lý xóa sách
    const handleDeleteBook = async (id) => {
        if (window.confirm("Bạn có chắc chắn muốn xóa cuốn sách này?")) {
            try {
                await deleteBook(id).unwrap();
                alert("Xóa sách thành công");
                refetch();
            } catch (error) {
                console.log(error);
                alert("Xóa sách thất bại");
            }
        }
    };

    // Lọc sách theo tiêu đề, thể loại, giá
    const filteredBooks = useMemo(() => {
        return books.filter((book) => {
            const matchesSearch = book.title
                .toLowerCase()
                .includes(searchTerm.toLowerCase());
            const matchesCategory =
                categoryFilter === "all" || book.category === categoryFilter;
            const matchesPrice =
                priceFilter === "all" ||
                (priceFilter === "under10" && book.newPrice < 10) ||
                (priceFilter === "10to20" &&
                    book.newPrice >= 10 &&
                    book.newPrice <= 20) ||
                (priceFilter === "over20" && book.newPrice > 20);

            return matchesSearch && matchesCategory && matchesPrice;
        });
    }, [books, searchTerm, categoryFilter, priceFilter]);

    // Lấy danh sách thể loại sách duy nhất
    const uniqueCategories = useMemo(() => {
        return ["all", ...new Set(books.map((book) => book.category))];
    }, [books]);

    // Nếu sách chưa được tải thì render "Đang tải..."
    if (!books) {
        return (
            <div className="flex items-center justify-center h-screen">
                Đang tải...
            </div>
        );
    }

    return (
        <div className="container px-4 mx-auto sm:px-8">
            <div className="py-8">
                {/* Header */}
                <h2 className="mb-6 text-2xl font-semibold">Quản lý sách</h2>

                {/* Filters */}
                <div className="flex flex-wrap gap-2 mb-6">
                    <select
                        className="px-4 py-2 text-sm bg-white border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                        value={categoryFilter}
                        onChange={(e) => setCategoryFilter(e.target.value)}
                    >
                        <option value="all">Tất cả thể loại</option>
                        {uniqueCategories.map(
                            (category, index) =>
                                category !== "all" && (
                                    <option key={index} value={category}>
                                        {category}
                                    </option>
                                )
                        )}
                    </select>

                    <select
                        className="px-4 py-2 text-sm bg-white border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                        value={priceFilter}
                        onChange={(e) => setPriceFilter(e.target.value)}
                    >
                        <option value="all">Tất cả giá</option>
                        <option value="under10">Dưới $10</option>
                        <option value="10to20">$10 - $20</option>
                        <option value="over20">Trên $20</option>
                    </select>

                    <div className="relative flex-grow sm:flex-grow-0">
                        <Search className="absolute w-4 h-4 text-gray-400 transform -translate-y-1/2 left-3 top-1/2" />
                        <input
                            type="text"
                            placeholder="Tìm kiếm theo tiêu đề"
                            className="w-full py-2 pl-10 pr-4 text-sm bg-white border border-gray-300 rounded-md sm:w-64 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                            value={searchTerm}
                            onChange={(e) => setSearchTerm(e.target.value)}
                        />
                    </div>
                </div>

                {/* Table */}
                <div className="overflow-hidden bg-white rounded-lg shadow">
                    <table className="min-w-full divide-y divide-gray-200">
                        <thead className="bg-gray-50">
                            <tr>
                                <th className="px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase">
                                    #
                                </th>
                                <th className="px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase">
                                    Sách
                                </th>
                                <th className="px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase">
                                    Thể loại
                                </th>
                                <th className="px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase">
                                    Giá
                                </th>
                                <th className="px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-500 uppercase">
                                    Hành động
                                </th>
                            </tr>
                        </thead>
                        <tbody className="bg-white divide-y divide-gray-200">
                            {filteredBooks.map((book, index) => (
                                <tr key={index} className="hover:bg-gray-50">

                                    {/* Hiển thị số thứ tự */}
                                    <td className="px-6 py-4 whitespace-nowrap">
                                        <div className="text-sm font-medium text-gray-600">
                                            {index + 1} {/* Thêm số thứ tự ở đây */}
                                        </div>
                                    </td>

                                    {/* Hiển thị thông tin sách */}
                                    <td className="px-6 py-4 whitespace-nowrap">
                                        <div className="flex items-center">
                                            <div className="flex-shrink-0 w-16 h-20">
                                                <img
                                                    className="object-cover w-16 h-20 rounded-sm"
                                                    src={getImgUrl(book.coverImage) || "/placeholder.svg"}
                                                    alt={book.title}
                                                    onError={(e) => {
                                                        e.currentTarget.onerror = null;
                                                        e.currentTarget.src = getImgUrl("placeholder.png");
                                                    }}
                                                />
                                            </div>
                                            <div className="ml-4">
                                                <div className="text-sm font-medium text-gray-900">
                                                    {book.title}
                                                </div>
                                            </div>
                                        </div>
                                    </td>

                                    {/* Hiển thị Thể loại sách */}
                                    <td className="px-6 py-4 whitespace-nowrap">
                                        <div className="text-sm text-gray-900">{book.category}</div>
                                    </td>
                                    
                                    {/* Hiển thị Giá sách */}
                                    <td className="px-6 py-4 whitespace-nowrap">
                                        <div className="text-sm text-gray-900">
                                            ${book.newPrice}
                                        </div>
                                    </td>

                                    {/* Hiển thị nút sửa và xóa */}
                                    <td className="px-6 py-4 text-sm font-medium whitespace-nowrap">
                                        <div className="flex space-x-3">
                                            <Link
                                                to={`/dashboard/edit-book/${book._id}`}
                                                className="text-blue-600 hover:text-blue-900"
                                            >
                                                <Pencil className="w-5 h-5" />
                                            </Link>
                                            <button
                                                onClick={() => handleDeleteBook(book._id)}
                                                className="text-red-600 hover:text-red-900"
                                            >
                                                <Trash2 className="w-5 h-5" />
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            ))}
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    );
};

export default ManageBook;
